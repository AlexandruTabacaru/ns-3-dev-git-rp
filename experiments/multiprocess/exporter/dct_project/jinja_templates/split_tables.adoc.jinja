:stem:


include::{{ introduction_markdown }}[]


== Detailed Results

[#detailedTable]
[%header,format=csv]
|===
{{ raw_csv }}
|===


ifdef::backend-html5[]
++++
<script>
let detailedTable = new DataTable('#detailedTable', {
    pageLength: 10,
    layout: {
        topStart: 'search',
        topEnd: 'pageLength',
        top2Start: {
            buttons: ['searchBuilder']
        },
        top2End: 'buttons',
    },
    buttons: [{ extend: 'copy', text: 'Copy to clipboard' }, 'csv', 'excel'],
    select: true
});

// The following code highlights LRRs below -0.5 in focused tables.
// This necessarily makes heavy assumptions about the formatting of the tables,
// because we don't have another way to locate the LRR unless we change the code
// that generates the CSVs to include more metadata.
const tableCells = document.querySelectorAll('.focusedTable td');
tableCells.forEach(cell => {
    // Proceed if the cell contains multiple lines
    const cellText = cell.textContent.trim();
    const lines = cellText.split('\n');
    if (lines.length <= 1) {
        return;
    }
//    // Proceed if the first line looks like a negative number
//    const isNegativeNumber = /^-\d+/.test(lines[0]);
//    if (!isNegativeNumber) {
//        return;
//    }
    // If this number is below -0.5 or above 0.5, rewrite the cell to color it bold red
    const num = parseFloat(lines[0]);
    if ((num <= -0.5)||(num >= 0.5)) {
        cell.innerHTML = `<span style="color:red;font-weight:bold;">${lines[0]}</span><br>${lines[1]}`;
    }
});

</script>
++++
endif::backend-html5[]



== Simulation KPIs

****
[options="header"]
|====
|LRR|ratio
|stem:[0]|stem:[1:1]
|stem:[0.1]|stem:[~1.25:1]
|stem:[0.2]|stem:[~1.6:1]
|stem:[0.3]|stem:[~2:1]
|stem:[0.4]|stem:[~2.5:1]
|stem:[0.5]|stem:[~3:1]
|====
****


* Throughput Performance
** *LogRateRatio*, stem:[text(LRR) = log_10(text(rate)_a/text(rate)_b)]
*** Using average per-flow throughput
*** e.g.
**** stem:[rate_a =] average, per-flow Prague throughput
**** stem:[rate_b =] average, per-flow Cubic throughput
*** stem:[0 = 1:1] ratio
*** stem:[+0.3 ~~ 2:1] ratio, stem:[-0.3 ~~ 1:2] ratio
* Latency Performance
** "*Latency Benefit*" stem:[= (text(P99PD)_b) - (text(P99PD)_a)]
*** P99PD is the 99^th^ percentile one way Wi-Fi link delay
*** P99PD = 99^th^ percentile downlink packet delay - fixed network delay
*** Using all packets delivered per flow type

{% if focused_csvs|length > 0 %}
== DualPI2 Prague(a) vs. Cubic(b)

=== Table Legend

[NOTE]
====
.1v1
Comparing performance of a lone prague flow to performance of a lone cubic flow

.n+n
stem:[n] prague flow(s) and stem:[n] cubic flow(s) sharing the link

.Key
[options="header"]
|====
|Cell Data
^|[.darkgray]#Log Rate Ratio -># -0.2 [a: 106M, b: 117M] [.darkgray]#<- Avg. a&b Thruputs in Mbps# +
[.darkgray]#Latency Benefit -># 12ms [a: 8ms, b: 20ms] [.darkgray]#<- P99PD for a&b in ms#
|====
====

{% endif %}


{% for focused_csv in focused_csvs %}
=== {{ focused_csv.name }}

[.focusedTable]
[options="header"]
[%header,format=csv]
|====
{{ focused_csv.content }}
|====

{% endfor %}


